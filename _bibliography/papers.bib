---
---

@string{tacl = {Transactions of the Association for Computational Linguistics (TACL)}}
@string{emnlp = {Conference on Empirical Methods in Natural Language Processing (EMNLP)}}
@string{acl = {Annual Meeting of the Association for Computational Linguistics (ACL)}}
@string{emnlpfindings = {Findings of Conference on Empirical Methods in Natural Language Processing (EMNLP)}}

@misc{ma2024mmlongbenchdocbenchmarkinglongcontextdocument,
    abbr = {arXiv},
    dataset={https://huggingface.co/datasets/yubo2333/MMLongBench-Doc},
    code={https://github.com/mayubo2333/MMLongBench-Doc},
    website={https://mayubo2333.github.io/MMLongBench-Doc/},
    pdf={https://arxiv.org/abs/2407.01523},
    abstract = "Understanding documents with rich layouts and multi-modal components is a long-standing and practical task. Recent Large Vision-Language Models (LVLMs) have made remarkable strides in various tasks, particularly in single-page document understanding (DU). However, their abilities on long-context DU remain an open problem. This work presents MMLongBench-Doc, a long-context, multi-modal benchmark comprising 1,062 expert-annotated questions. Distinct from previous datasets, it is constructed upon 130 lengthy PDF-formatted documents with an average of 49.4 pages and 20,971 textual tokens. Towards comprehensive evaluation, answers to these questions rely on pieces of evidence from (1) different sources (text, image, chart, table, and layout structure) and (2) various locations (i.e. page number). Moreover, 33.2% of the questions are cross-page questions requiring evidence across multiple pages. 22.8% of the questions are designed to be unanswerable for detecting potential hallucinations. Experiments on 14 LVLMs demonstrate that long-context DU greatly challenges current models. Notably, the best-performing model, GPT-4o, achieves an F1 score of only 42.7%, while the second-best, GPT-4V, scores 31.4%. Furthermore, 12 LVLMs (all except GPT-4o and GPT-4V) even present worse performance than their LLM counterparts which are fed with lossy-parsed OCR documents. These results validate the necessity of future research toward more capable long-context LVLMs.",
    bibtex_show = {true},
    title={MMLongBench-Doc: Benchmarking Long-context Document Understanding with Visualizations}, 
    author={Yubo Ma and Yuhang Zang and Liangyu Chen and Meiqi Chen and Yizhu Jiao and Xinze Li and Xinyuan Lu and Ziyu Liu and Yan Ma and Xiaoyi Dong and Pan Zhang and Liangming Pan and Yu-Gang Jiang and Jiaqi Wang and Yixin Cao and Aixin Sun},
    year={2024},
    eprint={2407.01523},
    archivePrefix={arXiv},
    primaryClass={cs.CV},
    url={https://arxiv.org/abs/2407.01523}
}

@misc{yao2024seakrselfawareknowledgeretrieval,
    abbr = {arXiv},
    code={https://github.com/thu-keg/seakr},
    pdf={https://arxiv.org/abs/2406.19215},
    abstract = "This paper introduces Self-aware Knowledge Retrieval (SeaKR), a novel adaptive RAG model that extracts self-aware uncertainty of LLMs from their internal states. SeaKR activates retrieval when the LLMs present high self-aware uncertainty for generation. To effectively integrate retrieved knowledge snippets, SeaKR re-ranks them based on LLM's self-aware uncertainty to preserve the snippet that reduces their uncertainty to the utmost. To facilitate solving complex tasks that require multiple retrievals, SeaKR utilizes their self-aware uncertainty to choose among different reasoning strategies. Our experiments on both complex and simple Question Answering datasets show that SeaKR outperforms existing adaptive RAG methods.",
    bibtex_show = {true},
    title={SeaKR: Self-aware Knowledge Retrieval for Adaptive Retrieval Augmented Generation}, 
    author={Zijun Yao and Weijian Qi and Liangming Pan and Shulin Cao and Linmei Hu and Weichuan Liu and Lei Hou and Juanzi Li},
    year={2024},
    eprint={2406.19215},
    archivePrefix={arXiv},
    primaryClass={cs.CL},
    url={https://arxiv.org/abs/2406.19215}
}

@misc{wong2024distilrrtransferringcoderepair,
    abbr = {arXiv},
    code={https://github.com/kylewong288/distilrr},
    pdf={https://arxiv.org/abs/2406.14867},
    abstract = "Large language models (LLMs) have shown remarkable performance on code generation tasks. A recent application of LLMs for code generation is iterative code repair, where a model fixes an incorrect program by rationalizing about errors and generating a new program. However, code repair is primarily studied on high-resource languages like Python, and the framework's efficacy is under-explored on low-resource languages. To apply code repair for low-resource languages, we propose Distilling Low-Resource Repairs (DistiLRR), an approach that transfers the reasoning and code generation ability from a teacher model to a student model. Our results show that DistiLRR consistently outperforms baselines on low-resource languages, but has similar performance on high-resource languages. To investigate this behavior, we perform a further analysis and find that the correlation between rationale quality and code correctness is weaker than previously perceived. We hypothesize this weakness is magnified in low-resource settings where base models lack deep knowledge of a programming language, leading to wavering benefits of code repair between high-resource and low-resource languages.",
    bibtex_show = {true},
    title={DistiLRR: Transferring Code Repair for Low-Resource Programming Languages}, 
    author={Kyle Wong and Alfonso Amayuelas and Liangming Pan and William Yang Wang},
    year={2024},
    eprint={2406.14867},
    archivePrefix={arXiv},
    primaryClass={cs.LG},
    url={https://arxiv.org/abs/2406.14867}
}

@misc{amayuelas2024multiagentcollaborationattackinvestigating,
    abbr = {arXiv},
    pdf={https://arxiv.org/abs/2406.14711},
    abstract = "Large Language Models (LLMs) have shown exceptional results on current benchmarks when working individually. The advancement in their capabilities, along with a reduction in parameter size and inference times, has facilitated the use of these models as agents, enabling interactions among multiple models to execute complex tasks. Such collaborations offer several advantages, including the use of specialized models (e.g. coding), improved confidence through multiple computations, and enhanced divergent thinking, leading to more diverse outputs. Thus, the collaborative use of language models is expected to grow significantly in the coming years. In this work, we evaluate the behavior of a network of models collaborating through debate under the influence of an adversary. We introduce pertinent metrics to assess the adversary's effectiveness, focusing on system accuracy and model agreement. Our findings highlight the importance of a model's persuasive ability in influencing others. Additionally, we explore inference-time methods to generate more compelling arguments and evaluate the potential of prompt-based mitigation as a defensive strategy.",
    bibtex_show = {true},
    title={MultiAgent Collaboration Attack: Investigating Adversarial Attacks in Large Language Model Collaborations via Debate}, 
    author={Alfonso Amayuelas and Xianjun Yang and Antonis Antoniades and Wenyue Hua and Liangming Pan and William Wang},
    year={2024},
    eprint={2406.14711},
    archivePrefix={arXiv},
    primaryClass={cs.CL},
    url={https://arxiv.org/abs/2406.14711}
}

@misc{wu2024updatinglanguagemodelsunstructured,
    abbr = {arXiv},
    pdf={https://arxiv.org/abs/2402.18909},
    abstract = "Knowledge editing aims to inject knowledge updates into language models to keep them correct and up-to-date. However, its current evaluation strategies are notably impractical: they solely update with well-curated structured facts (triplets with subjects, relations, and objects), whereas real-world knowledge updates commonly emerge in unstructured texts like news articles. In this paper, we propose a new benchmark, Unstructured Knowledge Editing (UKE). It evaluates editing performance directly using unstructured texts as knowledge updates, termed unstructured facts. Hence UKE avoids the laborious construction of structured facts and enables efficient and responsive knowledge editing, becoming a more practical benchmark. We conduct extensive experiments on newly built datasets and demonstrate that UKE poses a significant challenge to state-of-the-art knowledge editing methods, resulting in their critical performance declines. We further show that this challenge persists even if we extract triplets as structured facts. Our analysis discloses key insights to motivate future research in UKE for more practical knowledge editing.",
    bibtex_show = {true},
    title={Updating Language Models with Unstructured Facts: Towards Practical Knowledge Editing}, 
    author={Xiaobao Wu and Liangming Pan and William Yang Wang and Anh Tuan Luu},
    year={2024},
    eprint={2402.18909},
    archivePrefix={arXiv},
    primaryClass={cs.CL},
    url={https://arxiv.org/abs/2402.18909}
}

@misc{ma2024sciagenttoolaugmentedlanguagemodels,
    abbr = {arXiv},
    pdf={https://arxiv.org/abs/2402.11451},
    abstract = "Scientific reasoning poses an excessive challenge for even the most advanced Large Language Models (LLMs). To make this task more practical and solvable for LLMs, we introduce a new task setting named tool-augmented scientific reasoning. This setting supplements LLMs with scalable toolsets, and shifts the focus from pursuing an omniscient problem solver to a proficient tool-user. To facilitate the research of such setting, we construct a tool-augmented training corpus named MathFunc which encompasses over 30,000 samples and roughly 6,000 tools. Building on MathFunc, we develop SciAgent to retrieve, understand and, if necessary, use tools for scientific problem solving. Additionally, we craft a benchmark, SciToolBench, spanning five scientific domains to evaluate LLMs' abilities with tool assistance. Extensive experiments on SciToolBench confirm the effectiveness of SciAgent. Notably, SciAgent-Mistral-7B surpasses other LLMs with the same size by more than 13% in absolute accuracy. Furthermore, SciAgent-DeepMath-7B shows much superior performance than ChatGPT.",
    bibtex_show = {true},
    title={SciAgent: Tool-augmented Language Models for Scientific Reasoning}, 
    author={Yubo Ma and Zhibin Gou and Junheng Hao and Ruochen Xu and Shuohang Wang and Liangming Pan and Yujiu Yang and Yixin Cao and Aixin Sun and Hany Awadalla and Weizhu Chen},
    year={2024},
    eprint={2402.11451},
    archivePrefix={arXiv},
    primaryClass={cs.CL},
    url={https://arxiv.org/abs/2402.11451}
}

@article{pan-etal-2024-automatically,
    abbr = {TACL},
    google_scholar_id={vV6vV6tmYwMC},
    website={https://github.com/teacherpeterpan/self-correction-llm-papers},
    pdf={https://direct.mit.edu/tacl/article/doi/10.1162/tacl_a_00660/120911},
    abstract = "While large language models (LLMs) have shown remarkable effectiveness in various NLP tasks, they are still prone to issues such as hallucination, unfaithful reasoning, and toxicity. A promising approach to rectify these flaws is correcting LLMs with feedback, where the LLM itself is prompted or guided with feedback to fix problems in its own output. Techniques leveraging automated feedback{---}either produced by the LLM itself (self-correction) or some external system{---}are of particular interest as they make LLM-based solutions more practical and deployable with minimal human intervention. This paper provides an exhaustive review of the recent advances in correcting LLMs with automated feedback, categorizing them into training-time, generation-time, and post-hoc approaches. We also identify potential challenges and future directions in this emerging field.",
    bibtex_show = {true},
    selected = {true},
    title = "Automatically Correcting Large Language Models: Surveying the Landscape of Diverse Automated Correction Strategies",
    author = "Pan, Liangming  and
      Saxon, Michael  and
      Xu, Wenda  and
      Nathani, Deepak  and
      Wang, Xinyi  and
      Wang, William Yang",
    journal = tacl,
    volume = "12",
    year = "2024",
    address = "Cambridge, MA",
    publisher = "MIT Press",
    url = "https://aclanthology.org/2024.tacl-1.27",
    pages = "484--506"
}

@inproceedings{xu-etal-2024-faithful,
    abbr = {ACL},
    code={https://github.com/aiden0526/symbcot},
    pdf={https://arxiv.org/abs/2405.18357},
    bibtex_show = {true},
    selected = {true},
    abstract = "While the recent Chain-of-Thought (CoT) technique enhances the reasoning ability of large language models (LLMs) with the theory of mind, it might still struggle in handling logical reasoning that relies much on symbolic expressions and rigid deducing rules. To strengthen the logical reasoning capability of LLMs, we propose a novel Symbolic Chain-of-Thought, namely SymbCoT, a fully LLM-based framework that integrates symbolic expressions and logic rules with CoT prompting. Technically, building upon an LLM, SymbCoT 1) first translates the natural language context into the symbolic format, and then 2) derives a step-by-step plan to solve the problem with symbolic logical rules, 3) followed by a verifier to check the translation and reasoning chain. Via thorough evaluations on 5 standard datasets with both First-Order Logic and Constraint Optimization symbolic expressions, SymbCoT shows striking improvements over the CoT method consistently, meanwhile refreshing the current state-of-the-art performances. We further demonstrate that our system advances in more faithful, flexible, and explainable logical reasoning. To our knowledge, this is the first to combine symbolic expressions and rules into CoT for logical reasoning with LLMs.",
    title = "Faithful Logical Reasoning via Symbolic Chain-of-Thought",
    author = {Jundong Xu and
              Hao Fei and
              Liangming Pan and
              Qian Liu and
              Mong{-}Li Lee and
              Wynne Hsu},
    booktitle = acl,
    year = "2024",
    address = "Thailand",
    publisher = "Association for Computational Linguistics",
    url = "https://arxiv.org/abs/2405.18357"
}

@inproceedings{xu-etal-2024-faithful,
    abbr = {ACL},
    google_scholar_id={3s1wT3WcHBgC},
    code={https://github.com/xu1998hz/llm_self_bias},
    pdf={https://arxiv.org/abs/2402.11436},
    bibtex_show = {true},
    oral = {true},
    selected = {true},
    abstract = "Recent studies show that large language models (LLMs) improve their performance through self-feedback on certain tasks while degrade on others. We discovered that such a contrary is due to LLM's bias in evaluating their own output. In this paper, we formally define LLM's self-bias - the tendency to favor its own generation - using two statistics. We analyze six LLMs (GPT-4, GPT-3.5, Gemini, LLaMA2, Mixtral and DeepSeek) on translation, constrained text generation, and mathematical reasoning tasks. We find that self-bias is prevalent in all examined LLMs across multiple languages and tasks. Our analysis reveals that while the self-refine pipeline improves the fluency and understandability of model outputs, it further amplifies self-bias. To mitigate such biases, we discover that larger model size and external feedback with accurate assessment can significantly reduce bias in the self-refine pipeline, leading to actual performance improvement in downstream tasks.",
    title = "Pride and Prejudice: LLM Amplifies Self-Bias in Self-Refinement",
    author = {Wenda Xu and
              Guanglei Zhu and
              Xuandong Zhao and
              Liangming Pan and
              Lei Li and
              William Yang Wang},
    booktitle = acl,
    year = "2024",
    address = "Thailand",
    publisher = "Association for Computational Linguistics",
    url = "https://arxiv.org/abs/2402.11436"
}

@inproceedings{pan-etal-2023-logic,
    abbr = {EMNLP},
    google_scholar_id={RHpTSmoSYBkC},
    code={https://github.com/teacherpeterpan/logic-llm},
    pdf={https://arxiv.org/abs/2305.12295},
    bibtex_show = {true},
    selected = {true},
    abstract = "Large Language Models (LLMs) have shown human-like reasoning abilities but still struggle with complex logical problems. This paper introduces a novel framework, Logic-LM, which integrates LLMs with symbolic solvers to improve logical problem-solving. Our method first utilizes LLMs to translate a natural language problem into a symbolic formulation. Afterward, a deterministic symbolic solver performs inference on the formulated problem. We also introduce a self-refinement module, which utilizes the symbolic solver{'}s error messages to revise symbolic formalizations. We demonstrate Logic-LM{'}s effectiveness on five logical reasoning datasets: ProofWriter, PrOntoQA, FOLIO, LogicalDeduction, and AR-LSAT. On average, Logic-LM achieves a significant performance boost of 39.2{\%} over using LLM alone with standard prompting and 18.4{\%} over LLM with chain-of-thought prompting. Our findings suggest that Logic-LM, by combining LLMs with symbolic logic, offers a promising avenue for faithful logical reasoning.",
    title = "Logic-{LM}: Empowering Large Language Models with Symbolic Solvers for Faithful Logical Reasoning",
    author = "Pan, Liangming  and
      Albalak, Alon  and
      Wang, Xinyi  and
      Wang, William",
    booktitle = emnlpfindings,
    year = "2023",
    address = "Singapore",
    publisher = "Association for Computational Linguistics",
    url = "https://aclanthology.org/2023.findings-emnlp.248",
    pages = "3806--3824"
}

@inproceedings{pan-etal-2023-risk,
    abbr = {EMNLP},
    google_scholar_id={mB3voiENLucC},
    code={https://github.com/MexicanLemonade/LLM-Misinfo-QA},
    pdf={https://arxiv.org/abs/2305.13661},
    abstract = "While large language models (LLMs) have shown remarkable effectiveness in various NLP tasks, they are still prone to issues such as hallucination, unfaithful reasoning, and toxicity. A promising approach to rectify these flaws is correcting LLMs with feedback, where the LLM itself is prompted or guided with feedback to fix problems in its own output. Techniques leveraging automated feedback{---}either produced by the LLM itself (self-correction) or some external system{---}are of particular interest as they make LLM-based solutions more practical and deployable with minimal human intervention. This paper provides an exhaustive review of the recent advances in correcting LLMs with automated feedback, categorizing them into training-time, generation-time, and post-hoc approaches. We also identify potential challenges and future directions in this emerging field.",
    bibtex_show = {true},
    selected = {true},
    title = "On the Risk of Misinformation Pollution with Large Language Models",
    author = "Pan*, Yikang and
      Pan*, Liangming and
      Chen, Wenhu  and
      Nakov, Preslav  and
      Kan, Min-Yen  and
      Wang, William",
    booktitle = emnlpfindings,
    year = "2023",
    address = "Singapore",
    publisher = "Association for Computational Linguistics",
    url = "https://aclanthology.org/2023.findings-emnlp.97",
    pages = "1389--1403",
    abstract = "We investigate the potential misuse of modern Large Language Models (LLMs) for generating credible-sounding misinformation and its subsequent impact on information-intensive applications, particularly Open-Domain Question Answering (ODQA) systems. We establish a threat model and simulate potential misuse scenarios, both unintentional and intentional, to assess the extent to which LLMs can be utilized to produce misinformation. Our study reveals that LLMs can act as effective misinformation generators, leading to a significant degradation (up to 87{\%}) in the performance of ODQA systems. Moreover, we uncover disparities in the attributes associated with persuading humans and machines, presenting an obstacle to current human-centric approaches to combat misinformation. To mitigate the harm caused by LLM-generated misinformation, we propose three defense strategies: misinformation detection, vigilant prompting, and reader ensemble. These approaches have demonstrated promising results, albeit with certain associated costs. Lastly, we discuss the practicality of utilizing LLMs as automatic misinformation generators and provide relevant resources and code to facilitate future research in this area.",
}

@inproceedings{lu-etal-2023-scitab,
    abbr = {EMNLP},
    google_scholar_id={hFOr9nPyWt4C},
    code={https://github.com/xinyuanlu00/scitab},
    pdf={https://arxiv.org/abs/2305.13186},
    abstract = "Current scientific fact-checking benchmarks exhibit several shortcomings, such as biases arising from crowd-sourced claims and an over-reliance on text-based evidence. We present SCITAB, a challenging evaluation dataset consisting of 1.2K expert-verified scientific claims that 1) originate from authentic scientific publications and 2) require compositional reasoning for verification. The claims are paired with evidence-containing scientific tables annotated with labels. Through extensive evaluations, we demonstrate that SCITAB poses a significant challenge to state-of-the-art models, including table-based pretraining models and large language models. All models except GPT-4 achieved performance barely above random guessing. Popular prompting techniques, such as Chain-of-Thought, do not achieve much performance gains on SCITAB. Our analysis uncovers several unique challenges posed by SCITAB, including table grounding, claim ambiguity, and compositional reasoning. Our codes and data are publicly available at https://github.com/XinyuanLu00/SciTab.",
    bibtex_show = {true},
    title = "{SCITAB}: A Challenging Benchmark for Compositional Reasoning and Claim Verification on Scientific Tables",
    author = "Lu*, Xinyuan  and
      Pan*, Liangming  and
      Liu, Qian  and
      Nakov, Preslav  and
      Kan, Min-Yen",
    booktitle = emnlp,
    year = "2023",
    address = "Singapore",
    publisher = "Association for Computational Linguistics",
    url = "https://aclanthology.org/2023.emnlp-main.483",
    pages = "7787--7813"
}

@phdthesis{phdthesis-pan-2022-QG,
  abbr = {PhD thesis},
  pdf = {https://www.proquest.com/docview/2723857718?pq-origsite=gscholar&fromopenview=true&sourcetype=Dissertations%20&%20Theses},
  title = {Towards Generating Deep Questions from Text},
  author = {Liangming Pan},
  year = {2022},
  address = {Singapore},
  school = {National University of Singapore}
}